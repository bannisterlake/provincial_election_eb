{"version":3,"sources":["logo.svg","components/partyCard.js","components/GainsBar.js","components/GainsDiv.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","styles","makeStyles","partyContainer","props","backgroundColor","party","color","padding","maxHeight","margin","borderRadius","fontWeight","letterSpacing","display","justifyContent","PartyCard","classes","className","nameShort","result","alignItems","height","position","width","left","right","gainsBar","bottom","borderWidth","borderStyle","borderColor","transition","transitionDelay","GainsBar","useState","barWidth","setWidth","useEffect","id","style","Math","abs","gainsDiv","flex","flexDirection","centerBar","borderLeft","zIndex","Gains","max","setMax","tempMax","data","partyResults","forEach","console","log","seatChange","map","i","partyWidth","key","require","main","fontSize","small","alignContent","content","paddingBottom","title","marginLeft","border","borderRight","marginRight","chartHolder","partyBars","alignSelf","chartDiv","App","setData","loading","toggleLoading","timer","getData","startTimer","setInterval","axios","get","then","res","status","catch","err","votesPercent","padAngle","datum","y","innerRadius","x","labels","fill","d","GainsDiv","update","Date","generated","Boolean","window","location","hostname","match","screenSize","screen","ReactDOM","render","undefined","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6ad9ae65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles({\r\n    partyContainer: props => ({\r\n        backgroundColor: props.party.color,\r\n        padding: 5,\r\n        maxHeight: 40,\r\n        margin: 3,\r\n        borderRadius: 5,\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        letterSpacing: 1,\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    })\r\n})\r\n\r\nconst PartyCard = (props) => {\r\n\r\n    const classes = styles(props)\r\n\r\n    return (\r\n        <div className={classes.partyContainer}>\r\n            <div>{props.party.nameShort}</div>\r\n            <div>{props.result > 0 && '+'}{props.result}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PartyCard","import React, {useState, useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {CSSTransition, Transition} from 'react-transition-group'\r\n\r\nconst styles = makeStyles({\r\n    partyContainer: props => ({\r\n        alignItems: 'center',\r\n        height: 25,\r\n        margin: 3,\r\n        position: 'relative',\r\n        width: '80%',\r\n        color: 'black',\r\n        fontWeight: 'bold',\r\n        letterSpacing: 1,\r\n        display: 'flex',\r\n        position: 'relative',\r\n        justifyContent: 'space-between',\r\n        borderBottom: '1px solid black',\r\n        '& #minus': {\r\n            position: 'absolute',\r\n            left: -15\r\n        },\r\n        '& #plus': {\r\n            position: 'absolute',\r\n            right: -15\r\n        }\r\n    }),\r\n    gainsBar: {\r\n        backgroundColor: props=> props.color,\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        right: props=> props.width <= 0 && '50%',\r\n        left: props=> props.width > 0 && '50%',\r\n        height: '60%',\r\n        borderWidth: '1px',\r\n        borderStyle: 'solid',\r\n        borderColor: props=>props.color,\r\n        margin: 0,\r\n        padding: 0, \r\n        transition: `width 300ms ease-in-out`,\r\n        transitionDelay: '100ms'\r\n    }\r\n})\r\n\r\nconst GainsBar = (props) => {\r\n    const classes = styles(props) \r\n    const [barWidth, setWidth] = useState(0)  \r\n\r\n    useEffect(() => {\r\n        setWidth(props.width)\r\n    }, [props])\r\n\r\n    return (\r\n        <div className={classes.partyContainer}>\r\n            <div id=\"minus\">-</div>\r\n                <div style={{width: `${Math.abs(barWidth)}%`}} className={classes.gainsBar}></div>\r\n            <div id=\"plus\">+</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GainsBar","import React, {useState, useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n\r\nimport Gainsbar from './GainsBar'\r\n\r\nconst styles = makeStyles({\r\n\tgainsDiv: {\r\n        flex: 5,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        justifyContent: 'center',\r\n        // boxSizing: 'border-box'\r\n    },\r\n    centerBar: {\r\n        position: 'absolute',\r\n        borderLeft: '1px solid black',\r\n        left: '50%',\r\n        height: '97%',\r\n        zIndex: 20\r\n        \r\n    }\r\n})\r\n\r\nconst Gains = (props) => {\r\n    \r\n    const [max, setMax] = useState(0);\r\n\r\n    const classes = styles(props)\r\n\r\n\r\n    useEffect(()=>{\r\n        let tempMax = 0\r\n        if (props.data) {\r\n            props.data.partyResults.forEach(party=> {\r\n                console.log(\"party\",party.seatChange, tempMax)\r\n                if (Math.abs(party.seatChange) > tempMax) {\r\n                    tempMax = Math.abs(party.seatChange)\r\n                }\r\n            })\r\n            setMax(tempMax)\r\n\r\n        }\r\n\r\n    },[props.data])\r\n\r\n    return (\r\n        <div className={classes.gainsDiv}>\r\n            <div className={classes.centerBar}></div>\r\n            {props.data && props.data.partyResults.map((party,i)=>{\r\n                let partyWidth = 0\r\n                if (max !== 0) {\r\n                    partyWidth = (party.seatChange)/(max + 1) * 100;\r\n                }\r\n                return <Gainsbar key={i} color={party.color} width={`${partyWidth/2}`}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gains","import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\nimport 'babel-polyfill'\n\n\nimport {makeStyles} from '@material-ui/core/styles'\nimport {VictoryPie, Slice} from 'victory'\n\n\nimport PartyCard from './components/partyCard'\nimport GainsDiv from './components/GainsDiv'\n\nrequire('es6-promise/auto');\n\nconst styles = makeStyles({\n\tmain: {\n\t\tfontSize: (props) => props.small && 12,\n\t\t// fontFamily: 'Roboto',\n\t\tdisplay: 'flex',\n\t\tposition: 'relative',\n\t\tflexDirection: 'column',\n\t\tpadding: '10px 20px',\n\t\tbackgroundColor: '#ededf0',\n\t\talignContent: 'center'\n\t}, \n\tcontent: {\n\t\tdisplay: 'flex', \n\t\tflexDirection: props=>props.small ? 'column' : 'row',\n\t\tpaddingBottom: '15px',\n\n\t},\n\tleft: {\n\t\tflex: 3,\n\t\tmaxHeight: 250,\n\t\talignItems: 'center',\n\t\t\n\t},\n\tright: {\n\t\tflex: 4,\n\t\tmaxHeight: 250\n\n\t},\n\ttitle: {\n\t\tfontWeight: 'bold',\n\t\tmarginLeft: 5,\n\t\tfontSize: props=> props.small ? 16 : 18\n\t}, \n\tborder: {\n\t\tborderRight: '1px solid grey',\n\t\tmarginRight: 10\n\t},\n\tchartHolder: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\theight: '100%',\n\t\talignItems: 'center'\n\t},\n\tpartyBars: {\n\t\tflex: 3,\n\t\talignSelf: 'center',\n\t},\n\tchartDiv: {\n\t\tflex: (props) => props.small ? 3 : 2,\n\t},\n\n})\n\nfunction App(props) {\n\n  const [data, setData] = useState(null)\n  const [loading, toggleLoading] = useState(true)\n  const [timer, setTimer] = useState(30000)\n\n  const classes = styles(props);\n\n  useEffect(()=>{\n\tconsole.log(`Updating every ${timer/1000} seconds`)\n\tgetData();\n\tstartTimer();\n  },[])\n\n  const startTimer = () => {\n\tsetInterval(()=>{\n\t\tconsole.log(\"updating\")\n\t\tgetData();\n\t}, timer);\n  }\n\n  const getData = () => {\n\tconsole.log(\"fetching\")\n    axios.get('/overallresults')\n      .then(res=>{\n\t\t  if (res.status === 200) {\n\t\t\tsetData(res.data);\n\t\t\ttoggleLoading(false)\n\t\t  }\n\t\t})\n\t  .catch(err=>{\n\t\t  console.log(\"Error fetching election results\")\n\t  })\n  }\n\n  return (\n    <div id=\"graphWidget-main\" className={classes.main}>\n\t  { !loading && \n\t  <>\n\t\t<div className={classes.content}>\n\t\t\t<div className={classes.left}>\n\t\t\t\t<div className={classes.title}>Popular vote</div>\n\t\t\t\t<div className={classes.chartHolder}>\n\t\t\t\t\t<div className={classes.partyBars}>\n\t\t\t\t\t\t{data && data.partyResults.map((party,i)=>{\n              \n\t\t\t\t\t\t\treturn <PartyCard key={i} party={party} result={`${party.votesPercent}%`} />\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.chartDiv}>\n\t\t\t\t\t\t{data &&\n\t\t\t\t\t\t\t<VictoryPie\n\t\t\t\t\t\t\t\tid=\"widgetPie\"\n\t\t\t\t\t\t\t\t// padding={{top:0,left:20, right: 20, bottom:0}}\n\t\t\t\t\t\t\t\tpadding={50}\n\t\t\t\t\t\t\t\tpadAngle={({ datum }) => datum.y}\n\t\t\t\t\t\t\t\tinnerRadius={130}\n\t\t\t\t\t\t\t\tdata={data.partyResults}\n\t\t\t\t\t\t\t\tx={\"nameShort\"}\n\t\t\t\t\t\t\t\ty={\"votesPercent\"}\n\t\t\t\t\t\t\t\tlabels={({datum})=>''}\n\t\t\t\t\t\t\t\tstyle={{\t\n\t\t\t\t\t\t\t\t\tdata: {fill: (d)=>d.datum.color},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.border}/>\n\t\t\t<div className={classes.right}>\n\t\t\t\t<div className={classes.title}>Gains/Losses</div>\n\t\t\t\t<div className={classes.chartHolder}>\n\t\t\t\t\t<div className={classes.partyBars}>\n\t\t\t\t\t\t{data && data.partyResults.map((party,i)=>{\n\t\t\t\t\t\t\treturn <PartyCard key={i} party={party} result={`${party.seatChange}`} />\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <GainsChart data={data} /> */}\n\t\t\t\t\t<GainsDiv data={data}/>\n\t\t\t\t</div>\n\t\t\t</div>\n        </div>\n\t\t<div>\n\t\t\t<div className={classes.update}>Last updated: { Date(data.generated) }</div>\n\t\t</div>\n\t\t</>\n\t  }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet screenSize= window.screen.width < 500;\n\nReactDOM.render(\n    <App small={screenSize ? 'true' : undefined}/>\n    ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}