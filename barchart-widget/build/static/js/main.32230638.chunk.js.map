{"version":3,"sources":["components/Party.js","components/Seat.js","components/MajorityMeter.js","App.js","index.js"],"names":["styles","makeStyles","seat","props","height","minWidth","margin","backgroundColor","color","flexShrink","fontSize","small","partyContainer","width","party","display","alignItems","fontWeight","letterSpacing","padding","borderRadius","justifyItems","justifyContent","popVote","Party","classes","className","name","seats","votes","useStyles","meter","maxWidth","position","minHeight","bar","background","animationName","animationDuration","transition","transitionDelay","zIndex","majorityLine","bottom","borderLeft","majorityLabel","textAlign","marginLeft","Bar","other","Barchart","useState","maxSeats","setMaxSeats","majorityPosition","setMajorityPosition","useEffect","data","leadingParty","partyResults","console","log","majority","seatTotal","style","right","map","i","left","require","main","flexDirection","titleRow","title","barchart","flexWrap","partyMap","alignContent","update","App","setData","setTitle","timer","axios","get","then","res","status","catch","err","startTimer","getData","setInterval","parties","date","push","key","nameShort","votesPercent","Date","generated","MajorityMeter","majorityPercent","toString","screenSize","window","screen","ReactDOM","render","undefined","document","getElementById"],"mappings":"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","file":"static/js/main.32230638.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles({\r\n    partyContainer: {\r\n        width: '20%',\r\n\r\n    },\r\n    party: props=> ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontWeight: 'bold',\r\n        letterSpacing: 2,\r\n        padding: '5px 5px',\r\n        margin: 1,\r\n        borderRadius: 5,\r\n        color: 'white',\r\n        justifyItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: props.color \r\n    }),\r\n    popVote: {\r\n        padding: 5,\r\n        fontWeight: 'bold',\r\n        // textAlign: 'right',\r\n\r\n    }\r\n})\r\n\r\nconst Party = (props) => {\r\n    \r\n    const classes = styles(props)\r\n    \r\n    return (\r\n        <div className={classes.partyContainer}>\r\n            <div className={classes.party}>\r\n                <div>{props.name}</div>\r\n                <div>{props.seats}</div>\r\n            </div>\r\n            <div className={classes.popVote}>\r\n                {/* {props.small? `${props.votes}%` : `Pop vote: ${props.votes}%`} */}\r\n                Pop vote: {props.votes}%\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Party;","import React from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles({\r\n    seat: props=> ({\r\n        height: 20, \r\n        minWidth: '4%',\r\n        margin: '0.2%',\r\n        backgroundColor:  props.color,\r\n        flexShrink: 1, \r\n        fontSize: props=>props.small === \"true\" ? 8 : 10\r\n    })\r\n})\r\n\r\nconst Seat = (props) => {\r\n    \r\n    const classes = styles(props)\r\n    \r\n    return <div key={`${props.party}-${props.el}`} className={classes.seat}/>\r\n}\r\n\r\nexport default Seat;","import React, {useState, useEffect} from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n// import {CSSTransition} from 'react-transition-group'\r\n\r\nconst useStyles = makeStyles({\r\n    meter: {\r\n        maxWidth: '95%',\r\n        position: 'relative',\r\n        minHeight: '20px',\r\n\r\n    },\r\n    bar: {\r\n      background: (props) =>\r\n        props.color, \r\n      width: (props) => props.votes,\r\n      borderRadius: '0px 5px 5px 0px',\r\n      height: 10,\r\n      margin: 2,\r\n      animationName: 'animate-bar',\r\n      animationDuration: '0.5s',\r\n      transition: `width 300ms ease-in-out`,\r\n      transitionDelay: '100ms',\r\n      zIndex: 20\r\n\r\n    },\r\n    majorityLine: {\r\n        position: 'absolute',\r\n        height: '120%',\r\n        minHeight: '20px',\r\n        bottom: -2,\r\n        borderLeft: '2px solid black',\r\n        transition: `left 300ms ease-in-out`,\r\n    },\r\n    majorityLabel: {\r\n        position: 'absolute',\r\n        textAlign: 'left',\r\n        bottom: 50,\r\n        marginLeft: -7,\r\n        fontWeight: 'bolder',\r\n        transition: `right 300ms ease-in-out`,\r\n    }\r\n  });\r\n  \r\n\r\nfunction Bar(props) {\r\n    // const [width, setWidth] = useState(0)\r\n    const { color, votes, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <div className={`animate-bar ${classes.bar}`} {...other} />;\r\n}\r\n\r\nfunction Line(props) {\r\n    const { color, majority, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <div className={classes.majorityLine} {...other} />;\r\n}\r\n\r\nconst Barchart = (props) => {\r\n    \r\n    // const { color, ...other } = props;\r\n    const [maxSeats, setMaxSeats] = useState(25)\r\n    const [difference, setDifference] = useState(0);\r\n    const [majorityPosition, setMajorityPosition] = useState(50);\r\n    const [leading, setLeading] = useState(0)\r\n    const classes = useStyles(props)\r\n    \r\n    useEffect(()=> {\r\n        if (props.data) {\r\n            let leadingParty = props.data.partyResults[0];\r\n            console.log('leading', props.majority, leadingParty.seats)\r\n            if (leadingParty.seats >= props.majority) {\r\n                setMaxSeats(leadingParty.seats);\r\n                setMajorityPosition(props.majority/leadingParty.seats*100)\r\n            } else {\r\n                setMaxSeats(props.majority)\r\n                setMajorityPosition(props.majority/props.majority*100)\r\n            }\r\n        }\r\n    }, [props.data])\r\n\r\n    var lead = 61\r\n\r\n    var majority = (props.majority/props.seatTotal)*100\r\n\r\n    return (\r\n        <div className={classes.meter}>\r\n            <div className={classes.majorityLabel} style={{right: `${100-majorityPosition}%`}}>{props.majority} seats needed for majority</div>\r\n            {props.data && props.data.partyResults.map((party, i)=>{\r\n                console.log('max seats', maxSeats)\r\n                if (i < 3) {\r\n                    return <Bar color={party.color} votes={`${(party.seats/maxSeats)*100}%`} />\r\n                } \r\n            })    \r\n            }\r\n            {console.log('majority',majority)}\r\n            <div className={classes.majorityLine} style={{left: `${majorityPosition}%`}}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Barchart;","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\nimport 'babel-polyfill'\r\n\r\n//Components\r\nimport Seat from './components/Seat'\r\nimport Party from './components/Party'\r\nimport MajorityMeter from './components/MajorityMeter'\r\n\r\nrequire('es6-promise/auto');\r\n\r\n\r\nconst styles = makeStyles({\r\n\tmain: {\r\n\t\t// fontFamily: 'Roboto',\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'relative',\r\n\t\tflexDirection: 'column',\r\n\t\tpadding: '10px 10px',\r\n\t\tbackgroundColor: '#ededf0'\r\n\t},\r\n\ttitleRow: {\r\n\t\tdisplay: 'flex', \r\n\t\tpadding: '0px 5px 5px 5px',\r\n\t\tjustifyContent: 'space-between'\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: props => props.small ? 18: 26,\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tbarchart: {\r\n\t\tfontSize: props=> props.small ? 8 : 14,\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '20px 0',\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tpartyMap: {\r\n\t\tfontSize: props=>props.small ? 9 : 18,\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\talignContent: 'left',\r\n\t},\r\n\tupdate: {\r\n\t\tpadding: '15px 5px',\r\n\t\tfontSize: props=>props.small ? 8 : 12\r\n\t}\r\n})\r\n\r\nconst App = (props) => {\r\n\r\n\tconst classes = styles(props);\r\n\tconst [data, setData] = useState(null)\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [timer, setTimer] = useState(30000)\r\n\tconst [seatTotal, setSeatTotal] = useState(49)\r\n\r\n\tuseEffect(()=>{\r\n\t\tconsole.log(`Updating every ${timer/1000} seconds`)\r\n\t\taxios.get('/title')\r\n\t\t\t.then(res=>{\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\tsetTitle(res.data)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err=>console.log(\"error setting title\"))\r\n\t\tstartTimer();\r\n\t\tgetData();\r\n\t},[])\r\n\t\r\n\tconst startTimer = () => {\r\n\t\tsetInterval(()=>{\r\n\t\t\tgetData();\r\n\t\t}, timer);\r\n\t}\r\n\t\r\n\r\n\tconst getData = () => {\r\n\t\tconsole.log('fetching')\r\n\t\taxios.get(`/overallresults`)\r\n\t\t\t.then(function (res) {\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetData(res.data)\r\n\t\t\t\t} \r\n\t\t\t})\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconsole.log(\"Error fetching results\")\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\tconst seats = [];\r\n\r\n\tconst parties = [];\r\n\r\n\tvar date = ''\r\n\r\n\tif (data) {\r\n\t\tdata.partyResults.map((party, i)=>{\r\n\t\t\tif (party.seats > 0 ) {\r\n\t\t\t\tparties.push(<Party small={props.small} key={`${party}-${i}`} name={party.nameShort} seats={party.seats} votes={party.votesPercent} color={party.color} />)\r\n\t\t\t}\r\n\t\t})\r\n\t\tdate = new Date(data.generated)\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.main}>\r\n\t\t\t<div className={classes.titleRow}>\r\n\t\t\t\t<div className={classes.title}>{title}</div>\r\n\t\t\t</div>\r\n\t\t\t{(data && data.partyResults[0].seats > 0 ) && <div className={classes.barchart}>\r\n\t\t\t\t<MajorityMeter seatTotal={seatTotal} majority={25} majorityPercent={(25/seatTotal)*100} data={data}/>\r\n\t\t\t</div>}\r\n\t\t\t<div className={classes.partyMap}>\r\n\t\t\t\t{parties}\r\n\t\t\t</div>\r\n\t\t\t{/* <div className={classes.declaration}>Declaration</div> */}\r\n\t\t\t{data && <div className={classes.update}>Last updated: {date && date.toString()}</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nlet screenSize= window.screen.width < 500;\r\n\r\nReactDOM.render(<App small={screenSize ? 'true' : undefined}/>, document.getElementById(\"root\"));"],"sourceRoot":""}