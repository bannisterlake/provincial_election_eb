{"version":3,"sources":["components/Seat.js","components/Party.js","components/MajorityMeter.js","App.js","index.js"],"names":["styles","makeStyles","seat","props","height","minWidth","margin","backgroundColor","color","flexShrink","Seat","classes","key","party","el","className","partyContainer","width","display","alignItems","fontWeight","letterSpacing","padding","borderRadius","justifyItems","justifyContent","popVote","Party","name","seats","votes","useStyles","meter","maxWidth","position","minHeight","bar","background","animationName","animationDuration","majorityLine","bottom","borderLeft","majorityLabel","textAlign","marginLeft","Bar","other","Barchart","useState","difference","setDifference","majorityPosition","setMajorityPosition","leading","setLeading","useEffect","data","leadingParty","partyResults","majority","seatTotal","leadDifference","console","log","style","left","map","i","test","main","flexDirection","titleRow","title","fontSize","small","barchart","flexWrap","partyMap","update","App","setData","setTitle","timer","fetch","then","res","text","json","catch","err","startTimer","getData","setInterval","ok","parties","date","j","push","nameShort","votesPercent","length","seatsRemaining","k","Date","generated","MajorityMeter","majorityPercent","toString","screenSize","window","screen","ReactDOM","render","undefined","document","getElementById"],"mappings":"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","file":"static/js/main.138e3f35.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles({\r\n    seat: props=> ({\r\n        height: 20, \r\n        minWidth: '4%',\r\n        margin: '0.2%',\r\n        backgroundColor:  props.color,\r\n        flexShrink: 1\r\n    })\r\n})\r\n\r\nconst Seat = (props) => {\r\n    \r\n    const classes = styles(props)\r\n    \r\n    return <div key={`${props.party}-${props.el}`} className={classes.seat}/>\r\n}\r\n\r\nexport default Seat;","import React from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles({\r\n    partyContainer: {\r\n        width: '20%',\r\n\r\n    },\r\n    party: props=> ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontWeight: 'bold',\r\n        letterSpacing: 2,\r\n        padding: '5px 5px',\r\n        margin: 1,\r\n        borderRadius: 5,\r\n        color: 'white',\r\n        justifyItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: props.color \r\n    }),\r\n    popVote: {\r\n        padding: 5,\r\n        fontWeight: 'bold'\r\n    }\r\n})\r\n\r\nconst Party = (props) => {\r\n    \r\n    const classes = styles(props)\r\n    \r\n    return (\r\n        <div className={classes.partyContainer}>\r\n            <div className={classes.party}>\r\n                <div>{props.name}</div>\r\n                <div>{props.seats}</div>\r\n            </div>\r\n            <div className={classes.popVote}>\r\n                Pop vote: {props.votes}%\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Party;","import React, {useState, useEffect} from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n// import {CSSTransition} from 'react-transition-group'\r\n\r\nconst useStyles = makeStyles({\r\n    meter: {\r\n        maxWidth: '90%',\r\n        position: 'relative',\r\n        minHeight: '20px',\r\n\r\n    },\r\n    bar: {\r\n      background: (props) =>\r\n        props.color, \r\n      width: (props) => props.votes,\r\n      borderRadius: '0px 5px 5px 0px',\r\n      height: 10,\r\n      margin: 2,\r\n      animationName: 'animate-bar',\r\n      animationDuration: '0.5s'\r\n    },\r\n    majorityLine: {\r\n        position: 'absolute',\r\n        height: '120%',\r\n        minHeight: '20px',\r\n        bottom: -2,\r\n        borderLeft: '2px solid black',\r\n    },\r\n    majorityLabel: {\r\n        position: 'absolute',\r\n        textAlign: 'left',\r\n        bottom: 50,\r\n        marginLeft: -7,\r\n        fontWeight: 'bolder'\r\n    }\r\n  });\r\n  \r\n\r\nfunction Bar(props) {\r\n    // const [width, setWidth] = useState(0)\r\n    const { color, votes, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <div className={`animate-bar ${classes.bar}`} {...other} />;\r\n}\r\n\r\nfunction Line(props) {\r\n    const { color, majority, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <div className={classes.majorityLine} {...other} />;\r\n}\r\n\r\nconst Barchart = (props) => {\r\n    \r\n    // const { color, ...other } = props;\r\n    const [difference, setDifference] = useState(0);\r\n    const [majorityPosition, setMajorityPosition] = useState(50);\r\n    const [leading, setLeading] = useState(0)\r\n    const classes = useStyles(props)\r\n    \r\n    useEffect(()=> {\r\n        if (props.data) {\r\n            let leadingParty = props.data.partyResults[0];\r\n            let majority = (props.majority/props.seatTotal*100)\r\n            if (leadingParty.seats > props.majority) {\r\n                let leadDifference = 100 - (leadingParty.seats/props.seatTotal*100)\r\n                console.log(leadDifference)\r\n                setDifference(leadDifference);\r\n                setLeading(leadingParty.seats)\r\n                setMajorityPosition( majority + leadDifference);\r\n            } else {\r\n                // let leadDifference = ((leadingParty.seats/props.majority)*100)\r\n                setDifference(-1)\r\n                setMajorityPosition(100)\r\n\r\n            }\r\n        }\r\n    }, [props.data])\r\n\r\n    var lead = 61\r\n\r\n    var majority = (props.majority/props.seatTotal)*100\r\n\r\n    return (\r\n        <div className={classes.meter}>\r\n            <div className={classes.majorityLabel} style={{left: `${majorityPosition}%`}}>{props.majority} seats needed for majority</div>\r\n            {props.data && props.data.partyResults.map((party, i)=>{\r\n                if (i === 0) {\r\n                    let test = 100 - (party.seats/props.seatTotal)*100;\r\n                    console.log(test)\r\n                    lead = party.seats\r\n                    majority = `${party.seats/props.seatTotal*100}%`\r\n                    if (difference > 0) {\r\n                        return <Bar color={party.color} votes={`${(party.seats/props.seatTotal)*100 + difference}%`} />\r\n                    } else if (difference < 0) {\r\n                        return <Bar color={party.color} votes={`${(party.seats/props.majority)*100}%`} />\r\n                    }\r\n                } else if (i < 3 && party.seats > 0) {\r\n                    if (difference > 0) {\r\n                        return <Bar color={party.color} votes={`${(party.seats/leading)*100}%`} />\r\n\r\n                    } else if (difference < 0) {\r\n                        return <Bar color={party.color} votes={`${(party.seats/props.majority)*100}%`} />\r\n\r\n                    }\r\n                }\r\n            })    \r\n            }\r\n            {console.log('majority',majority)}\r\n            <div className={classes.majorityLine} style={{left: `${majorityPosition}%`}}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Barchart;","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n//Components\r\nimport Seat from './components/Seat'\r\nimport Party from './components/Party'\r\nimport MajorityMeter from './components/MajorityMeter'\r\n\r\nconst styles = makeStyles({\r\n\tmain: {\r\n\t\t// fontFamily: 'Roboto',\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'relative',\r\n\t\tflexDirection: 'column',\r\n\t\tpadding: '20px 30px',\r\n\t\tbackgroundColor: '#ededf0'\r\n\t},\r\n\ttitleRow: {\r\n\t\tdisplay: 'flex', \r\n\t\tpadding: '0px 5px 5px 5px',\r\n\t\tjustifyContent: 'space-between'\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: props => props.small ? 20: 26,\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tbarchart: {\r\n\t\tfontSize: props=> props.small ? 11 : 14,\r\n\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '30px 0',\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tpartyMap: {\r\n\t\tfontSize: props=>props.small ? 14 : 18,\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-evenly'\r\n\t},\r\n\tupdate: {\r\n\t\tpadding: '15px 5px',\r\n\t\tfontSize: props=>props.small ? 12 : 14\r\n\t}\r\n})\r\n\r\nconst App = (props) => {\r\n\r\n\tconst classes = styles(props);\r\n\tconst [data, setData] = useState(null)\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [timer, setTimer] = useState(300000)\r\n\tconst [seatTotal, setSeatTotal] = useState(49)\r\n\r\n\tuseEffect(()=>{\r\n\t\tconsole.log(`Updating every ${timer/1000} seconds`)\r\n\t\tfetch('/title')\r\n\t\t\t.then(res=>res.text())\r\n\t\t\t.then(json=>setTitle(json))\r\n\t\t\t.catch(err=>console.log(\"error setting title\"))\r\n\t\tstartTimer();\r\n\t\tgetData();\r\n\t},[])\r\n\t\r\n\tconst startTimer = () => {\r\n\t\tsetInterval(()=>{\r\n\t\t\tgetData();\r\n\t\t}, 10000);\r\n\t}\r\n\t\r\n\r\n\tconst getData = () => {\r\n\t\tconsole.log('fetching')\r\n\t\tfetch(`/overallresults`)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tif (res.ok) {\r\n\t\t\t\t\treturn res.json();\r\n\t\t\t\t} \r\n\t\t\t})\r\n\t\t\t.then(json=>\r\n\t\t\t\tsetData(json)\r\n\t\t\t)\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconsole.log(\"Error fetching results\")\r\n\t\t\t})\r\n\r\n\t}\r\n\r\n\tconst seats = [];\r\n\r\n\tconst parties = [];\r\n\r\n\tvar date = ''\r\n\r\n\tif (data) {\r\n\t\tdata.partyResults.map((party, i)=>{\r\n\t\t\tfor (let j=0; j < party.seats; j ++) {\r\n\t\t\t\tseats.push(<Seat key={`${party.nameShort}-${j}`} color={party.color} />)\r\n\t\t\t}\r\n\t\t\tparties.push(<Party key={`${party}-${i}`} name={party.nameShort} seats={party.seats} votes={party.votesPercent} color={party.color} />)\r\n\t\t})\r\n\t\tif (seats.length < (seatTotal+1)) {\r\n\t\t\tlet seatsRemaining = seatTotal-seats.length\r\n\t\t\tfor (let k=0; k < seatsRemaining; k++) {\r\n\t\t\t\tseats.push(<Seat key={`none-${k}`} color={'#cccccc'}/>)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdate = new Date(data.generated)\r\n\r\n\t} else {\r\n\t\tfor (let i = 0; i < seatTotal; i++) {\r\n\t\t\tseats.push(<Seat key={`none-${i}`} color={'#cccccc'} />)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.main}>\r\n\t\t\t<div className={classes.titleRow}>\r\n\t\t\t\t<div className={classes.title}>{title}</div>\r\n\t\t\t</div>\r\n\t\t\t{(data && data.partyResults[0].seats > 0 ) && <div className={classes.barchart}>\r\n\t\t\t\t<MajorityMeter seatTotal={seatTotal} majority={25} majorityPercent={(25/seatTotal)*100} data={data}/>\r\n\t\t\t</div>}\r\n\t\t\t<div className={classes.partyMap}>\r\n\t\t\t\t{parties}\r\n\t\t\t</div>\r\n\t\t\t{/* <div className={classes.declaration}>Declaration</div> */}\r\n\t\t\t{data && <div className={classes.update}>Last updated: {date && date.toString()}</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nlet screenSize= window.screen.width < 500;\r\n\r\nReactDOM.render(<App small={screenSize ? 'true' : undefined}/>, document.getElementById(\"root\"));"],"sourceRoot":""}