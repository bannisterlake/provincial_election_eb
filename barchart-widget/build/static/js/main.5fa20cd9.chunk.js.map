{"version":3,"sources":["components/Party.js","components/MajorityMeter.js","components/Declaration.js","App.js","index.js"],"names":["styles","makeStyles","partyContainer","width","party","props","display","alignItems","fontWeight","letterSpacing","padding","margin","borderRadius","color","justifyItems","justifyContent","backgroundColor","popVote","Party","classes","className","name","seats","small","votes","useStyles","meter","maxWidth","position","minHeight","bar","background","height","animationName","animationDuration","transition","transitionDelay","zIndex","majorityLine","bottom","borderLeft","majorityLabel","textAlign","top","marginLeft","Bar","other","Barchart","useState","maxSeats","setMaxSeats","majorityPosition","setMajorityPosition","useEffect","data","leadingParty","partyResults","console","log","majority","seatTotal","style","right","map","i","key","left","root","paddingBottom","alignSelf","fontSize","paddingLeft","paddingRight","Declaration","declarationText","require","main","flexDirection","titleRow","title","barchart","flexWrap","partyMap","alignContent","update","App","setData","declaration","setDeclaration","setTitle","timer","setSeats","setMajority","setDeclarationText","province","window","location","search","split","find","el","includes","e","axios","get","then","res","status","catch","err","startTimer","getData","overallResult","partyName","resultText","text","setInterval","parties","date","push","nameShort","votesPercent","Date","generated","MajorityMeter","majorityPercent","toString","screenSize","innerWidth","ReactDOM","render","undefined","document","getElementById"],"mappings":"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","file":"static/js/main.5fa20cd9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst styles = makeStyles({\r\n    partyContainer: {\r\n        width: '20%',\r\n\r\n    },\r\n    party: props=> ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontWeight: 'bold',\r\n        letterSpacing: 2,\r\n        padding: '5px 5px',\r\n        margin: 1,\r\n        borderRadius: 5,\r\n        color: 'white',\r\n        justifyItems: 'center',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: props.color \r\n    }),\r\n    popVote: {\r\n        padding: 5,\r\n        fontWeight: 'bold',\r\n        // textAlign: 'right',\r\n\r\n    }\r\n})\r\n\r\nconst Party = (props) => {\r\n    \r\n    const classes = styles(props)\r\n    \r\n    return (\r\n        <div className={classes.partyContainer}>\r\n            <div className={classes.party}>\r\n                <div>{props.name}</div>\r\n                <div>{props.seats}</div>\r\n            </div>\r\n            <div className={classes.popVote}>\r\n                {props.small? `${props.votes}%` : `Pop vote: ${props.votes}%`}\r\n                {/* Pop vote: {props.votes}% */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Party;","import React, {useState, useEffect} from 'react'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n// import {CSSTransition} from 'react-transition-group'\r\n\r\nconst useStyles = makeStyles({\r\n    meter: {\r\n        maxWidth: '95%',\r\n        position: 'relative',\r\n        minHeight: '20px',\r\n\r\n    },\r\n    bar: {\r\n      background: (props) =>\r\n        props.color, \r\n      width: (props) => props.votes,\r\n      borderRadius: '0px 5px 5px 0px',\r\n      height: 10,\r\n      margin: 2,\r\n      animationName: 'animate-bar',\r\n      animationDuration: '0.5s',\r\n      transition: `width 300ms ease-in-out`,\r\n      transitionDelay: '100ms',\r\n      zIndex: 20\r\n\r\n    },\r\n    majorityLine: {\r\n        position: 'absolute',\r\n        height: '120%',\r\n        minHeight: '20px',\r\n        bottom: -2,\r\n        borderLeft: '2px solid black',\r\n        transition: `left 300ms ease-in-out`,\r\n    },\r\n    majorityLabel: {\r\n        position: 'absolute',\r\n        textAlign: 'left',\r\n        top: -25,\r\n        marginLeft: -7,\r\n        fontWeight: 'bolder',\r\n        transition: `right 300ms ease-in-out`,\r\n    }\r\n  });\r\n  \r\n\r\nfunction Bar(props) {\r\n    const { color, votes, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <div className={`animate-bar ${classes.bar}`} {...other} />;\r\n}\r\n\r\nconst Barchart = (props) => {\r\n    \r\n    const [maxSeats, setMaxSeats] = useState(25)\r\n    const [majorityPosition, setMajorityPosition] = useState(50);\r\n    const classes = useStyles(props)\r\n    \r\n    useEffect(()=> {\r\n        if (props.data) {\r\n            let leadingParty = props.data.partyResults[0];\r\n            console.log('leading', majorityPosition)\r\n            if (leadingParty.seats >= props.majority) {\r\n                setMaxSeats(leadingParty.seats);\r\n                setMajorityPosition(props.majority/leadingParty.seats*100)\r\n            } else {\r\n                setMaxSeats(props.majority)\r\n                setMajorityPosition(props.majority/props.majority*100)\r\n            }\r\n        }\r\n    }, [props.data,props.seatTotal])\r\n\r\n    return (\r\n        <div className={classes.meter}>\r\n            <div className={classes.majorityLabel} style={{right: `${100-majorityPosition}%`}}>{props.majority} seats needed for majority</div>\r\n            {props.data && props.data.partyResults.map((party, i)=>{\r\n                console.log('max seats', maxSeats)\r\n                if (i < 4) {\r\n                    return <Bar key={i} color={party.color} votes={party.seats > 0 ? `${(party.seats/maxSeats)*100}%` : '1%'} />\r\n                } \r\n            })    \r\n            }\r\n            <div className={classes.majorityLine} style={{left: `${majorityPosition}%`}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Barchart;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst useStyles=makeStyles({\r\n    root: {\r\n        display: 'flex', \r\n        alignItems: 'center',\r\n        paddingBottom: 15,\r\n        fontWeight: \"bolder\", \r\n        alignSelf: 'flex-start',\r\n        fontSize: 14,\r\n        paddingLeft: 5,\r\n        '& svg': {\r\n            color: 'green',\r\n            fontSize: 20, \r\n            paddingRight: 5\r\n        }\r\n\r\n    }\r\n})\r\n\r\nconst Declaration = (props) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={props.declarationText && classes.root}>\r\n            <CheckCircleIcon />\r\n            {props.declarationText}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Declaration","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\nimport 'babel-polyfill'\r\n\r\n//Components\r\nimport Party from './components/Party'\r\nimport MajorityMeter from './components/MajorityMeter';\r\nimport Declaration from './components/Declaration';\r\n\r\nrequire('es6-promise/auto');\r\n\r\n\r\nconst styles = makeStyles({\r\n\tmain: {\r\n\t\t// fontFamily: 'Roboto',\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'relative',\r\n\t\tflexDirection: 'column',\r\n\t\tpadding: '10px 10px',\r\n\t\tbackgroundColor: '#ededf0'\r\n\t},\r\n\ttitleRow: {\r\n\t\tdisplay: 'flex', \r\n\t\tpadding: '0px 5px 5px 5px',\r\n\t\tjustifyContent: 'space-between'\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 24,\r\n\t\t// paddingBottom: 10, \r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tbarchart: {\r\n\t\tfontSize: 14,\r\n\t\tdisplay: 'flex',\r\n\t\tpadding: '20px 0',\r\n\t\tflexDirection: 'column-reverse',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\tpartyMap: {\r\n\t\tfontSize: 16,\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t\talignContent: 'left',\r\n\t},\r\n\tupdate: {\r\n\t\tpadding: '15px 5px',\r\n\t\tfontSize: 10\r\n\t}\r\n})\r\n\r\nconst App = (props) => {\r\n\r\n\tconst classes = styles(props);\r\n\tconst [data, setData] = useState(null)\r\n\tconst [declaration, setDeclaration] = useState(null)\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [timer, setTimer] = useState(30000)\r\n\tconst [seatTotal, setSeats] = useState(0)\r\n\tconst [majority, setMajority] = useState(0)\r\n    const [declarationText, setDeclarationText] = useState('')\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tlet province = 'nb'\r\n\t\ttry {\r\n\t\t\tprovince = window.location.search.split('/').find(el=>el.includes('?prov=')).split('=')[1];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('default province')\r\n\t\t}\r\n\t\tconsole.log(`Updating every ${timer/1000} seconds`)\r\n\t\taxios.get(`/${province}/config`)\r\n\t\t\t.then(res=>{\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetTitle(res.data.title)\r\n\t\t\t\t\tsetSeats(res.data.seats)\r\n\t\t\t\t\tsetMajority(res.data.majority)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err=>console.log(\"error setting title\"))\r\n\t\tstartTimer();\r\n\t\tgetData();\r\n\t},[])\r\n\t\r\n\tuseEffect(()=>{\r\n\t\ttry {\r\n\t\t\tif (data && declaration) {\r\n\t\t\t\tif (declaration.overallResult.partyName && declaration.overallResult.resultText) {\r\n\t\t\t\t\tlet text = declaration.overallResult.partyName + ' ' + declaration.overallResult.resultText;\r\n\t\t\t\t\tconsole.log(text)\r\n\r\n\t\t\t\t\tsetDeclarationText(text)\r\n\t\t\t\t} else \r\n\t\t\t\tsetDeclarationText('')\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t\r\n\t\t}\r\n\r\n    },[data,declaration])\r\n\t\r\n\tconst startTimer = () => {\r\n\t\tsetInterval(()=>{\r\n\t\t\tgetData();\r\n\t\t}, timer);\r\n\t}\r\n\t\r\n\r\n\tconst getData = () => {\r\n\t\tlet province = 'nb'\r\n\t\ttry {\r\n\t\t\tprovince = window.location.search.split('/').find(el=>el.includes('?prov=')).split('=')[1];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('default province')\r\n\t\t}\r\n\t\tconsole.log('fetching')\r\n\t\taxios.get(`/${province}/overallresults`)\r\n\t\t\t.then(function (res) {\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tsetData(res.data)\r\n\t\t\t\t} \r\n\t\t\t})\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconsole.log(\"Error fetching results\")\r\n\t\t\t})\r\n\t\taxios.get(`/${province}/declaration`)\r\n\t\t.then(function (res) {\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tsetDeclaration(res.data)\r\n\t\t\t} \r\n\t\t})\r\n\t\t.catch(err=>{\r\n\t\t\tconsole.log(\"Error fetching results\")\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tconst seats = [];\r\n\r\n\tconst parties = [];\r\n\r\n\tvar date = ''\r\n\r\n\tif (data) {\r\n\t\tdata.partyResults.map((party, i)=>{\r\n\t\t\t// if (party.seats > 0 ) {\r\n\t\t\t\tparties.push(<Party small={props.small} key={`${party}-${i}`} name={party.nameShort} seats={party.seats} votes={party.votesPercent} color={party.color} />)\r\n\t\t\t// }\r\n\t\t})\r\n\t\tdate = new Date(data.generated)\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={classes.main}>\r\n\t\t\t<div className={classes.titleRow}>\r\n\t\t\t\t<div className={classes.title}>{title}</div>\r\n\t\t\t</div>\r\n\t\t\t{declarationText && \r\n\t\t\t\t<Declaration declarationText={declarationText} />\r\n\t\t\t}\t\r\n\t\t\t{(data) && <div className={classes.barchart}>\r\n\t\t\t\t<MajorityMeter seatTotal={seatTotal} majority={majority} majorityPercent={(majority/seatTotal)*100} data={data}/>\r\n\t\t\t</div>}\r\n\t\t\t\r\n\t\t\t<div className={classes.partyMap}>\r\n\t\t\t\t{parties}\r\n\t\t\t</div>\r\n\t\t\t{/* <div className={classes.declaration}>Declaration</div> */}\r\n\t\t\t{data && <div className={classes.update}>Last updated: {date && date.toString()}</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nlet screenSize= window.innerWidth < 500;\r\n\r\nReactDOM.render(<App small={screenSize ? 'true' : undefined}/>, document.getElementById(\"root\"));"],"sourceRoot":""}